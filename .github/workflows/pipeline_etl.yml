name: Deploy Lambda ETL

on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read

jobs:
    build:
        runs-on: ubuntu-latest
        env:
          AWS_DEFAULT_REGION: us-east-1
        outputs:
          image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
        defaults:
            run:
                shell: bash

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.10.0

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{secrets.AWS_OIDC_ARN}}
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_DEFAULT_REGION}}

            - name: Set image target
              id: set_image_tag
              run: |
                IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
                echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
                echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: Terraform Init
              run: |
                cd infra &&
                terraform init

            - name: Terraform Apply (ECR)
              run: |
                cd infra &&
                terraform apply --target=module.ecr -var="image_tag=$IMAGE_TAG" -auto-approve

            - name: Get ECR URI
              id: get_image_uri
              run: |
                IMAGE_URI=$(cd infra && terraform output -raw ecr_repository_url)
                echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

            - name: Build Docker Image
              run: docker build -t $IMAGE_URI:$IMAGE_TAG .

            - name: Set Registry URI
              id: set_registry_uri
              run: |
                REGISTRY_URI=$(echo $IMAGE_URI | cut -d'/' -f1)
                echo "REGISTRY_URI=$REGISTRY_URI" >> $GITHUB_ENV

            - name: Push Docker Image
              run: |
                aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REGISTRY_URI
                docker push $IMAGE_URI:$IMAGE_TAG

    deploy-raw:
        runs-on: ubuntu-latest
        needs: build
        env:
          AWS_DEFAULT_REGION: us-east-1
          IMAGE_TAG: ${{ needs.build.outputs.image_tag }}

        steps:
          - name: Checkout Code
            uses: actions/checkout@v4

          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v3
            with:
                terraform_version: 1.10.0

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
                role-to-assume: ${{secrets.AWS_OIDC_ARN}}
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_DEFAULT_REGION}}

          - name: Terraform Init
            run: |
              cd infra
              terraform init

          - name: Terraform Plan (Raw Lambda)
            run: |
              cd infra
              terraform plan \
                -var-file="envs/raw/terraform.tfvars" \
                -var="image_tag=$IMAGE_TAG"

          - name: Terraform Apply (Raw Lambda)
            run: |
              cd infra
              terraform apply -auto-approve \
                -var-file="envs/raw/terraform.tfvars" \
                -var="image_tag=$IMAGE_TAG"
